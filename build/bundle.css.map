{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Control.svelte",
    "Country.svelte",
    "Map.svelte",
    "TopCountries.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { app_state, country_codes, map_geojson, tourists } from './stores.js';\n\timport { onMount } from 'svelte'\n\timport Map from \"./Map.svelte\"\n\timport Country from \"./Country.svelte\"\n\timport Control from \"./Control.svelte\"\n\timport TopCountries from \"./TopCountries.svelte\"\n\n\tonMount(async () => {\n\t\tconst country_codes_raw = await fetch('data/country_codes.json');\n\t\tvar country_codes_data = await country_codes_raw.json();\n\t\t\n\t\tconst map_geojson_raw = await fetch('data/map_data.geojson');\n\t\tvar map_geojson_data = await map_geojson_raw.json();\n\t\t\n\t\tconst tourists_raw = await fetch('data/tourists_total.json');\n\t\tvar tourists_data = await tourists_raw.json();\n\n\t\tcountry_codes.set(country_codes_data)\n\t\tmap_geojson.set(map_geojson_data)\n\t\ttourists.set(tourists_data)\n\t});\n\t\n</script>\n\n<main>\n\t<div class=\"row\">\n\t\t<div class=\"col-10 offset-1\">\n\t\t\t<h1 class=\"title\">Foreign Tourists in Poland</h1>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-3 offset-1\">\n\t\t\t<Control />\n\t\t</div>\n\t\t{#if Object.keys($country_codes).length === 0 || Object.keys($map_geojson).length === 0 || Object.keys($tourists).length === 0}\n\t\t\t<div class=\"col-7\">\n\t\t\t\tloading data...\n\t\t\t</div>\n\t\t{:else}\n\t\t\t<div class=\"col-7\">\n\t\t\t\t<!-- MAIN MAP CODE -->\n\t\t\t\t<!-- row 1 -->\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-1 offset-2\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<Country country=\"DK\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<Country country=\"NO\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<Country country=\"SE\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<Country country=\"FI\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<Country country=\"LT\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<Country country=\"LV\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<Country country=\"EE\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<!-- row 2 -->\n\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<br><br><br><br>\n\t\t\t\t\t\t\t<Country country=\"CA\" />\n\t\t\t\t\t\t\t<Country country=\"US\" />\n\t\t\t\t\t\t\t<Country country=\"GB\" />\n\t\t\t\t\t\t\t<Country country=\"IE\" />\n\t\t\t\t\t\t\t<Country country=\"ES\" />\n\t\t\t\t\t\t\t<Country country=\"PT\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<br><br><br><br>\n\t\t\t\t\t\t\t<Country country=\"DE\" />\n\t\t\t\t\t\t\t<Country country=\"FR\" />\n\t\t\t\t\t\t\t<Country country=\"BE\" />\n\t\t\t\t\t\t\t<Country country=\"NL\" />\n\t\t\t\t\t\t\t<Country country=\"LU\" />\n\t\t\t\t\t\t\t<Country country=\"CH\" />\n\t\t\t\t\t\t\t<Country country=\"IT\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-8\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<Map />\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t<TopCountries level=\"total\"/>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<br><br><br><br>\n\t\t\t\t\t\t\t<Country country=\"RU\" />\n\t\t\t\t\t\t\t<Country country=\"BY\" />\n\t\t\t\t\t\t\t<Country country=\"UA\" />\n\t\t\t\t\t\t\t<Country country=\"GR\" />\n\t\t\t\t\t\t\t<Country country=\"CY\" />\n\t\t\t\t\t\t\t<Country country=\"MT\" />\n\t\t\t\t\t\t\t<Country country=\"JP\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<!-- row 3 -->\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col-1 offset-3\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<Country country=\"SI\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<Country country=\"AT\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<Country country=\"CZ\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<Country country=\"SK\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t{#if $app_state.mode !== 'total'}\n\t\t\t\t\t\t\t<Country country=\"HU\" />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/if}\n\t</div>\n\t<div class=\"row\">\n\t\t{#if Object.keys($country_codes).length === 0 || Object.keys($map_geojson).length === 0 || Object.keys($tourists).length === 0}\n\t\t\t<!-- pass -->\n\t\t{:else}\n\t\t<div class=\"col-7 offset-4\">\n\t\t\t{#if $app_state.mode === 'bywojewodztwo'}\n\t\t\t\t<TopCountries level=\"wojewodztwo\"/>\n\t\t\t{/if}\n\t\t\t{#if $app_state.mode === 'bycountry'}\n\t\t\t\t<TopCountries level=\"countryts\"/>\n\t\t\t{/if}\n\t\t</div>\n\t\t{/if}\n\t</div>\n</main>\n\n<style>\n\tmain {\n\t\tmargin: 10px;\n\t}\n\n\t.title {\n\t\tmargin: 10px;\n\t}\n</style>",
    "<script>\n    import { app_state, country_codes } from './stores.js';\n\n    let modes = [\n        {id: 'bywojewodztwo', text: 'By voivodeship'},\n        {id: 'bycountry', text: 'By country'},\n        {id: 'total', text: 'Total'}\n    ]\n    let selected_mode;\n\n    let wojewodztwa = [\n      {id: 'DOLNOŚLĄSKIE', text: 'Dolnośląskie'},\n      {id: 'KUJAWSKO-POMORSKIE', text: 'Kujawsko-Pomorskie'},\n      {id: 'LUBELSKIE', text: 'Lubelskie'},\n      {id: 'LUBUSKIE', text: 'Lubuskie'},\n      {id: 'ŁÓDZKIE', text: 'Łódzkie'},\n      {id: 'MAZOWIECKIE', text: 'Mazowieckie'},\n      {id: 'MAŁOPOLSKIE', text: 'Małopolskie'},\n      {id: 'OPOLSKIE', text: 'Opolskie'},\n      {id: 'PODKARPACKIE', text: 'Podkarpackie'},\n      {id: 'PODLASKIE', text: 'Podlaskie'},\n      {id: 'POMORSKIE', text: 'Pomorskie'},\n      {id: 'ŚLĄSKIE', text: 'Śląskie'},\n      {id: 'ŚWIĘTOKRZYSKIE', text: 'Świętokrzyskie'},\n      {id: 'WARMIŃSKO-MAZURSKIE', text: 'Warmińsko-Mazurskie'},\n      {id: 'WIELKOPOLSKIE', text: 'Wielkopolskie'},\n      {id: 'ZACHODNIOPOMORSKIE', text: 'Zachodniopomorskie'}\n    ]\n    let selected_wojewodztwo;\n\n    let years = [2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019];\n    let selected_year = 2019;\n\n    let country_display\n    $: try {\n      country_display = $country_codes[$app_state['country']]['en']\n    } catch (error) {\n      country_display = 'unknown'\n    }\n</script>\n\n<div>\n    <div class=\"card mycard\">\n      <div class=\"card-body\">\n        <h3 class=\"card-title\">Visualization</h3>\n        <div class=\"card-text\">\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <label class=\"input-group-text\" for=\"mode\">Mode</label>\n            </div>\n            <!-- svelte-ignore a11y-no-onchange -->\n            <select id=\"mode\" class=\"custom-select\" bind:value={selected_mode} on:change=\"{app_state.set_variable('mode', selected_mode.id)}\">\n            {#each modes as mode}\n              <option value={mode}>\n                {mode.text}\n              </option>\n            {/each}\n            </select>\n          </div>\n      \n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <label class=\"input-group-text\" for=\"year\">Year</label>\n            </div>\n            <!-- svelte-ignore a11y-no-onchange -->\n            <select id=\"year\" class=\"custom-select\" bind:value={selected_year} on:change=\"{app_state.set_variable('year', selected_year)}\">\n            {#each years as year}\n              <option value={year}>\n                {year}\n              </option>\n            {/each}\n            </select>\n          </div>\n      \n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n              <label class=\"input-group-text\" for=\"woj\">Voivodeship</label>\n            </div>\n            <!-- svelte-ignore a11y-no-onchange -->\n            <select id=\"woj\" class=\"custom-select\" bind:value={selected_wojewodztwo} on:change=\"{app_state.set_variable('wojewodztwo', selected_wojewodztwo.id)}\">\n            {#each wojewodztwa as wojewodztwo}\n              <option value={wojewodztwo}>\n                {wojewodztwo.text}\n              </option>\n            {/each}\n            </select>\n          </div>\n          <h4 class=\"card-title\">Current mode</h4>\n          {#if $app_state['mode'] === 'total'}\n            <div>\n              Ranking of countries by total number of tourists in <strong>{$app_state['year']}</strong>.\n            </div>\n          {:else if $app_state['mode'] == 'bycountry'}\n            <div>\n              Distribution of destinations among tourists from <strong>{country_display}</strong> in <strong>{$app_state['year']}</strong>.\n            </div>\n            <p class=\"additional-info\">\n              Percentages indicate the popularity of given destination (voivodeship), relative to the entrire traffic to Poland from <strong>{country_display}</strong>.\n              Table displays exact number of tourists from <strong>{country_display}</strong> by year.\n              <strong>Click on a flag to change the country.</strong>\n            </p>\n          {:else if $app_state['mode'] == 'bywojewodztwo'}\n            <div>\n              Ranking of countries within each voivodeship in <strong>{$app_state['year']}</strong>.\n            </div>\n            <p class=\"additional-info\">\n              Flags on the map indicate where do most tourists come from.\n              The full ranking is currently displayed for <strong>{$app_state['wojewodztwo']}</strong> voivodeship (highlighted on the map).\n              Percentage indicates what proportion of all tourists in a given voivodeship do tourists from given country account for.\n            </p>\n          {/if}\n          <p>\n            View source code of this app on <a href=\"https://github.com/ppatrzyk/foreign-tourists\">Github</a>.\n          </p>\n          <p>\n            Data source: <a href=\"https://bdl.stat.gov.pl/BDL/start\">Główny Urząd Statystyczny</a>.\n          </p>\n          <p>\n            Note: This data is based on number of nights spent in hotels by foreign citizens. For details, see <a href=\"https://bdl.stat.gov.pl/BDL/start\">documentation</a> (Category K18, Group G240, Subgroup P2759).\n          </p>\n        </div>\n      </div>\n    </div>\n</div>\n\n<style>\n  .mycard {\n    padding: 15px !important;\n    margin: 15px;\n  }\n\n  a {\n    color: black;\n    font-weight: 600;\n  }\n\n  .additional-info {\n    margin-top: 15px;\n  }\n</style>\n",
    "<script>\n\timport { app_state } from './stores.js';\n\texport let country;\n\tlet flagstate;\n\t$: if ($app_state['mode'] !== 'bycountry' || $app_state['country'] !== country) {\n\t\tflagstate = 'inactiveflag'\n\t} else {\n\t\tflagstate = 'activeflag'\n\t}\n</script>\n\n<div>\n\t<div on:click=\"{app_state.set_variable('country', country)}\" class=\"myflag {flagstate} flag-icon-background flag-icon-{country.toLowerCase()}\" />\n</div>\n\n<style>\n\t.myflag {\n\t\twidth: 60px;\n\t\theight: 45px;\n\t\tmargin-bottom: 20px;\n\t\tmargin-left: 20px;\n\t\tborder-radius: 5px;\n\t\tborder: 1px solid black;\n\t}\n\n\t.activeflag {\n\t\topacity: 1;\n\t}\n\n\t.inactiveflag {\n\t\topacity: 0.5;\n\t}\n</style>\n",
    "<script>\n\timport { app_state, map_geojson, country_codes } from './stores.js';\n\timport { onMount } from 'svelte'\n\timport { geoMercator, geoPath } from 'd3-geo'\n\timport { select } from 'd3-selection';\n\timport { scaleSequential } from 'd3-scale';\n\timport { interpolateHsl } from 'd3-interpolate';\n\n\tconst min_width = 1200;\n\tconst window_width  = Math.max(window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth, min_width);\n\n\tconst MAP_WIDTH = Math.round(8/12 * 7/12 * window_width);\n\tconst MAP_HEIGHT = MAP_WIDTH;\n\t// https://github.com/d3/d3-scale-chromatic\n\tconst color_scale = scaleSequential(interpolateHsl(\"#d6f5d6\", \"#051505\"));\n\tconst missing_color = \"#e9ecef\";\n\tconst picked_woj_color = '#c4ccd4'\n\n\t// d3 update functions\n\n\tfunction draw_map(geojson) {\n\t\tconst projection = geoMercator().fitSize([MAP_WIDTH, MAP_HEIGHT], geojson);\n\t\tconst path = geoPath().projection(projection);\n\t\tvar map = select(\"#map\");\n\t\tmap.selectAll(\"path\")\n\t\t\t.data(geojson.features)\n\t\t\t.enter()\n\t\t\t.append(\"path\")\n\t\t\t.attr(\"d\", path)\n\t\t\t.attr(\"class\", \"country-border\");\n\t\tmap.selectAll('text')\n\t\t\t.data(geojson.features)\n\t\t\t.enter()\n\t\t\t.append('text')\n\t\t\t.text('')\n\t\t\t.attr(\"class\", \"map-label\")\n\t\t\t.attr('transform', function(d) { return 'translate(' + path.centroid(d) + ')'; });\n\t\tmap.selectAll('circle')\n\t\t\t.data(geojson.features)\n\t\t\t.enter()\n\t\t\t.append('circle')\n\t\t\t.attr(\"r\", 20)\n\t\t\t.attr(\"opacity\", '0%')\n\t\t\t.attr('transform', function(d) { return 'translate(' + path.centroid(d) + ')'; });\n\t}\n\n\tfunction update_map(app_state) {\n\t\tvar mode = app_state['mode'];\n\t\tvar year = app_state['year'];\n\t\tvar country = app_state['country'];\n\t\tvar wojewodztwo = app_state['wojewodztwo'];\n\t\tif (mode === 'bycountry') {\n\t\t\tby_country_render(country, year)\n\t\t} else if (mode === 'bywojewodztwo') {\n\t\t\tby_wojewodztwo_render(year, wojewodztwo)\n\t\t} else {\n\t\t\t// pass\n\t\t}\n\t\treturn true\n\t}\n\n\tfunction by_country_render(country, year) {\n\t\tvar map = select(\"#map\");\n\t\tmap.selectAll(\"path\")\n\t\t\t.style(\"fill\", function(d) {\n\t\t\t\tvar value;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = d.properties['bycountry'][year][country]['year_prop'];\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// pass\n\t\t\t\t}\n\t\t\t\tif (value) {\n\t\t\t\t\treturn color_scale(value);\n\t\t\t\t} else {\n\t\t\t\t\treturn missing_color;\n\t\t\t\t}\n\t\t\t})\n\t\tmap.selectAll(\"text\")\n\t\t\t.text(function(d) {\n\t\t\t\tvar perc;\n\t\t\t\ttry {\n\t\t\t\t\tvar prop = d.properties['bycountry'][year][country]['year_prop'];\n\t\t\t\t\t// Javascript rounding workaround + to percent conversion\n\t\t\t\t\tperc = Math.round( (prop*100) * 100 + Number.EPSILON ) / 100\n\t\t\t\t\tperc = `${perc}%`\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error)\n\t\t\t\t\tperc = 'NA'\n\t\t\t\t}\n\t\t\t\treturn perc\n\t\t\t})\n\t\tmap.selectAll(\"circle\")\n\t\t\t.attr(\"opacity\", '0%');\n\t}\n\n\tfunction by_wojewodztwo_render(year, wojewodztwo) {\n\t\tvar map = select(\"#map\");\n\t\tmap.selectAll(\"path\")\n\t\t\t.style(\"fill\", function(d) {\n\t\t\t\t\tvar nazwa = d.properties['nazwa'].toUpperCase();\n\t\t\t\t\tif (nazwa == wojewodztwo) {\n\t\t\t\t\t\treturn picked_woj_color;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn missing_color;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\tmap.selectAll(\"text\").text('')\n\t\tmap.selectAll(\"circle\")\n\t\t\t.attr(\"opacity\", '100%')\n\t\t\t.attr('fill', function(d) {\n\t\t\t\tvar data = d.properties['bywojewodztwo'][year];\n\t\t\t\tvar top = data.map(el => el.country).filter(el => el != 'OTHER')[0];\n\t\t\t\treturn `url(#${top.toString()})`;\n\t\t\t})\n\t}\n\t$: update_trigger = update_map($app_state);\n\t\n\t$: countries = Object.keys($country_codes)\n\n\tonMount(async () => {\n\t\tdraw_map($map_geojson);\n\t\tupdate_map($app_state);\n\t});\n</script>\n\n<div>\n\t<div >\n\t\t<svg id=\"map\" width={MAP_WIDTH} height={MAP_HEIGHT}>\n\t\t\t<defs>\n\t\t\t\t{#each countries as country}\n\t\t\t\t\t<pattern id=\"{country}\" height=\"100%\" width=\"100%\" patternContentUnits=\"objectBoundingBox\">\n\t\t\t\t\t<image xlink:href=\"build/flag-icon-css/flags/1x1/{country.toLowerCase()}.svg\" preserveAspectRatio=\"none\" width=\"1\" height=\"1\"/>\n\t\t\t\t\t</pattern>\n\t\t\t\t{/each}\n\t\t\t</defs>\n\t\t</svg>\n\t</div>\n</div>\n\n<style>\n\t#map {\n\t\tmargin: 20px;\n\t}\n</style>",
    "<script>\n    import { app_state, map_geojson, tourists, country_codes } from './stores.js';\n\n    export let level; // wojewodztwo, total, countryts\n    \n    function get_data(level, app_state, map_geojson, tourists) {\n        var data;\n        var wojewodztwo = app_state['wojewodztwo'];\n        var year = app_state['year'];\n        var country = app_state['country'];\n        if (level == 'wojewodztwo') {\n            for (var entry of map_geojson['features']) {\n                var current_name = entry.properties.nazwa.toUpperCase();\n                if (current_name === wojewodztwo) {\n                    data = entry.properties['bywojewodztwo'][year]\n                }\n            }\n            // take top 15\n            data = data.slice(0, 15)\n        } else if (level == 'total') {\n            data = tourists[year]\n        } else if (level == 'countryts') {\n            for (var entry of map_geojson['features']) {\n                var current_name = entry.properties.nazwa.toUpperCase();\n                if (current_name === wojewodztwo) {\n                    data = []\n                    for (let [key, value] of Object.entries(entry.properties['bycountry'])) {\n                        try {\n                            var current_year = value[country]\n                            current_year['year'] = key\n                            data.unshift(current_year)\n                        } catch (error) {\n                            // pass\n                        }\n                    }\n                }\n            }\n        } else {\n            data = {};\n        }\n        return data\n    }\n    $: data = get_data(level, $app_state, $map_geojson, $tourists)\n    $: wojewodztwo = $app_state['wojewodztwo'];\n    \n</script>\n\n<div class=\"mytable\">\n    {#if level !== 'total'}\n        <h2>{wojewodztwo}</h2>\n    {/if}\n    <table class=\"table table-striped\">\n        <thead>\n            <tr>\n                {#if level !== 'countryts'}\n                    <th>Place</th>\n                {:else}\n                    <th>Year</th>\n                {/if}\n                {#if level !== 'countryts'}\n                    <th>Country</th>\n                {/if}\n                <th>Count</th>\n                <th>Perc of all</th>\n              </tr>\n        </thead>\n        <tbody>\n            {#each data as entry, i}\n                <tr>\n                    {#if level !== 'countryts'}\n                        <td>{i+1}</td>\n                    {:else}\n                        <td>{entry.year}</td>\n                    {/if}\n                    {#if level !== 'countryts'}\n                        <td>\n                            <span class=\"tableflag flag-icon-background flag-icon-{entry.country.toLowerCase()}\" />\n                            {$country_codes[entry.country]['en']}\n                        </td>\n                    {/if}\n                    <td>{entry.count}</td>\n                    <td>{Math.round( (entry.year_prop*100) * 100 + Number.EPSILON ) / 100}</td>\n                </tr>\n            {/each}\n        </tbody>\n    </table>\n</div>\n\n<style>\n    .tableflag {\n        display: inline-block;\n\t\twidth: 1.33rem;\n\t\theight: 1rem;\n\t\tmargin-right: 5px;\n    }\n    \n    .mytable {\n        margin-left: 25px;\n        margin-right: 25px;\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "AA6KC,IAAI,eAAC,CAAC,AACL,MAAM,CAAE,IAAI,AACb,CAAC,AAED,MAAM,eAAC,CAAC,AACP,MAAM,CAAE,IAAI,AACb,CAAC;ACrDA,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CAAC,UAAU,CACxB,MAAM,CAAE,IAAI,AACd,CAAC,AAED,CAAC,cAAC,CAAC,AACD,KAAK,CAAE,KAAK,CACZ,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,gBAAgB,cAAC,CAAC,AAChB,UAAU,CAAE,IAAI,AAClB,CAAC;AC1HF,OAAO,eAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,AACxB,CAAC,AAED,WAAW,eAAC,CAAC,AACZ,OAAO,CAAE,CAAC,AACX,CAAC,AAED,aAAa,eAAC,CAAC,AACd,OAAO,CAAE,GAAG,AACb,CAAC;AC6GD,IAAI,cAAC,CAAC,AACL,MAAM,CAAE,IAAI,AACb,CAAC;ACrDE,UAAU,eAAC,CAAC,AACR,OAAO,CAAE,YAAY,CAC3B,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAAG,AACf,CAAC,AAED,QAAQ,eAAC,CAAC,AACN,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,AACtB,CAAC"
}